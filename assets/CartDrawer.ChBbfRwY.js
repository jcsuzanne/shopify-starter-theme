import{e as n}from"./env.JitegIQa.js";import{g as c}from"./index.DjKJqAo0.js";import{r as i}from"./ShopifyHelpers.CxvC3EcH.js";import{c as o}from"./channels.Csjl1DsX.js";const p=()=>({items:[],itemsCount:0,RAF:!1,total:0,async init(){this.getCart(),this.watch(),o.addListener("cart::render",()=>{this.getCart(!1,()=>{this.patternBuy=="direct"&&this.openCart()})})},addOneItem(e){const t={id:e.key,quantity:e.quantity+1};this.updateItem(t),this.getCart(!0)},deleteOneItem(e){const t={id:e.key,quantity:e.quantity-1};this.updateItem(t),this.getCart(!0)},watch(){this.RAF=requestAnimationFrame(()=>{this.listenStock(),this.watch()})},closeCart(){o.emit("cart::close")},listenStock(){document.querySelector(".js-stock-check")!=null&&(window.getComputedStyle(document.querySelector(".js-stock-check"),null).getPropertyValue("display")=="flex"?n.$html.classList.add("product-unavailable"):n.$html.classList.remove("product-unavailable"))},openCart(){o.emit("cart::open")},getCart(e,t=null){const r=e?.5:0;c.delayedCall(r,()=>{fetch("/cart.js",{method:"get"}).then(s=>s.json()).then(s=>{console.log(s),this.itemsCount=s.item_count,this.samplesCount=0,this.total=s.total_price,this.items=s.items,typeof t<"u"&&typeof t=="function"&&t(),s.item_count>0&&s.total_price==0&&this.resetCart()}).catch(s=>{console.error("Error adding item to cart:",s)})})},getProductPrice(e){return e.original_price},getCount(){return this.itemsCount},getTotal(){return i(this.total)},renderPrice(e,t){if(e==0){let r=translations.free_product_price;return typeof t<"u"&&typeof t.total_discount<"u"&&t.total_discount!=0&&(r+="<strike>"+i(t.total_discount)+"</strike>"),r}else{let r="";return r=i(e),t.discounts.length&&t.discounts[0].amount!=0&&(r+="<strike>"+i(t.original_price)+"</strike>"),r}},removeItem(e){const t={id:e.key,quantity:0};this.updateItem(t),this.getCart(!0)},resetCart(){fetch("/cart/clear.js",{method:"post"}).then(e=>e.json()).then(e=>{this.getCart()})},showProperties(e){const t=e.properties;let r=[];for(let s in t)if(s!="_free_sample"&&s!="_gift"){const a=t[s].split(" â€” ");r.push(a[0].trim())}return r.join(", ")},updateItem(e){fetch("/cart/change.js",{method:"POST",headers:{"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify(e)}).then(t=>t.json()).then(t=>{this.items=t.items,console.log(t)}).catch(t=>{console.error("Error upading item from cart:",t)})}});export{p as C};
